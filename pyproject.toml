[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "croniter"
version = "6.1.0rc1"
description = "croniter provides iteration for datetime object with cron like format"
readme = "README.rst"
license = { file = "LICENSE" }
authors = [
    { name = "Matsumoto Taichi", email = "taichino@gmail.com" },
    { name = "kiorky", email = "kiorky@cryptelium.net" },
    { name = "Ash Berlin-Taylor", email = "ash@apache.org" },
    { name = "Jarek Potiuk", email = "jarek@potiuk.com" },
]
requires-python = ">=3.9"
keywords = [
    "datetime",
    "iterator",
    "cron"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: POSIX",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13"
]
dependencies = [
    "python_dateutil"
]

[project.urls]
Homepage = "https://github.com/pallets-eco/croniter"

[dependency-groups]
dev = [
    "pytest>=8.3.3",
    "pytest-cov>=5.0.0",
    "coverage>=4.2",
    "setuptools",
    "pytz>2021.1"
]
lint = [
    "ruff"
]
mypy = [
    "mypy",
    "types-python-dateutil",
    "types-pytz"
]
format = [
    "ruff",
]
tox = [
    "tox>=4",
]
release = [
    "zest.releaser[recommended]>=6.7"
]

[tool.ruff]
line-length = 99

[tool.ruff.lint.per-file-ignores]
"*" = ["C901"]

[tool.coverage.run]
branch = true
omit = [
    ".tox/*",
    "src/croniter/tests*",
    "src/croniter/test_*.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError"
]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
skip = [
    ".tox",
    ".git"
]
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 99

[tool.flit.module]
directory = "src"
name = "croniter"

[tool.mypy]
exclude = [
    "dist/.*",
    # Exclude hidden files and directories
    ".*/\\..*"
]
